// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: module.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_NUMBER Type = 0
	Type_STRING Type = 1
	Type_BOOL   Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "NUMBER",
		1: "STRING",
		2: "BOOL",
	}
	Type_value = map[string]int32{
		"NUMBER": 0,
		"STRING": 1,
		"BOOL":   2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_module_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_module_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{0}
}

type Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U32  uint32  `protobuf:"varint,1,opt,name=u32,proto3" json:"u32,omitempty"`
	U64  uint64  `protobuf:"varint,2,opt,name=u64,proto3" json:"u64,omitempty"`
	S32  int32   `protobuf:"zigzag32,3,opt,name=s32,proto3" json:"s32,omitempty"`
	S64  int64   `protobuf:"zigzag64,4,opt,name=s64,proto3" json:"s64,omitempty"`
	Uf32 uint32  `protobuf:"fixed32,5,opt,name=uf32,proto3" json:"uf32,omitempty"`
	Uf64 uint64  `protobuf:"fixed64,6,opt,name=uf64,proto3" json:"uf64,omitempty"`
	Sf32 int32   `protobuf:"fixed32,7,opt,name=sf32,proto3" json:"sf32,omitempty"`
	Sf64 int64   `protobuf:"fixed64,8,opt,name=sf64,proto3" json:"sf64,omitempty"`
	I32  int32   `protobuf:"varint,9,opt,name=i32,proto3" json:"i32,omitempty"`
	I64  int64   `protobuf:"varint,10,opt,name=i64,proto3" json:"i64,omitempty"`
	F64  float64 `protobuf:"fixed64,11,opt,name=f64,proto3" json:"f64,omitempty"`
	F32  float32 `protobuf:"fixed32,12,opt,name=f32,proto3" json:"f32,omitempty"`
}

func (x *Number) Reset() {
	*x = Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Number) ProtoMessage() {}

func (x *Number) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Number.ProtoReflect.Descriptor instead.
func (*Number) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{0}
}

func (x *Number) GetU32() uint32 {
	if x != nil {
		return x.U32
	}
	return 0
}

func (x *Number) GetU64() uint64 {
	if x != nil {
		return x.U64
	}
	return 0
}

func (x *Number) GetS32() int32 {
	if x != nil {
		return x.S32
	}
	return 0
}

func (x *Number) GetS64() int64 {
	if x != nil {
		return x.S64
	}
	return 0
}

func (x *Number) GetUf32() uint32 {
	if x != nil {
		return x.Uf32
	}
	return 0
}

func (x *Number) GetUf64() uint64 {
	if x != nil {
		return x.Uf64
	}
	return 0
}

func (x *Number) GetSf32() int32 {
	if x != nil {
		return x.Sf32
	}
	return 0
}

func (x *Number) GetSf64() int64 {
	if x != nil {
		return x.Sf64
	}
	return 0
}

func (x *Number) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *Number) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *Number) GetF64() float64 {
	if x != nil {
		return x.F64
	}
	return 0
}

func (x *Number) GetF32() float32 {
	if x != nil {
		return x.F32
	}
	return 0
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str   string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{1}
}

func (x *String) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *String) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B bool `protobuf:"varint,1,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{2}
}

func (x *Bool) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    Type    `protobuf:"varint,1,opt,name=type,proto3,enum=pb.Type" json:"type,omitempty"`
	Number  *Number `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	String_ *String `protobuf:"bytes,3,opt,name=string,proto3" json:"string,omitempty"`
	Bool    *Bool   `protobuf:"bytes,4,opt,name=bool,proto3" json:"bool,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_NUMBER
}

func (x *Message) GetNumber() *Number {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *Message) GetString_() *String {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *Message) GetBool() *Bool {
	if x != nil {
		return x.Bool
	}
	return nil
}

type Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers  []*Number  `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Strings  []*String  `protobuf:"bytes,2,rep,name=strings,proto3" json:"strings,omitempty"`
	Bools    []*Bool    `protobuf:"bytes,3,rep,name=bools,proto3" json:"bools,omitempty"`
	Messages []*Message `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
	Arrays   []*Array   `protobuf:"bytes,5,rep,name=arrays,proto3" json:"arrays,omitempty"`
	Types    []Type     `protobuf:"varint,6,rep,packed,name=types,proto3,enum=pb.Type" json:"types,omitempty"`
	U32S     []uint32   `protobuf:"varint,7,rep,packed,name=u32s,proto3" json:"u32s,omitempty"`
	Strs     []string   `protobuf:"bytes,8,rep,name=strs,proto3" json:"strs,omitempty"`
}

func (x *Array) Reset() {
	*x = Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Array) ProtoMessage() {}

func (x *Array) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Array.ProtoReflect.Descriptor instead.
func (*Array) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{4}
}

func (x *Array) GetNumbers() []*Number {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *Array) GetStrings() []*String {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *Array) GetBools() []*Bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *Array) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Array) GetArrays() []*Array {
	if x != nil {
		return x.Arrays
	}
	return nil
}

func (x *Array) GetTypes() []Type {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Array) GetU32S() []uint32 {
	if x != nil {
		return x.U32S
	}
	return nil
}

func (x *Array) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers   map[uint32]*Number   `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Strings   map[string]*String   `protobuf:"bytes,2,rep,name=strings,proto3" json:"strings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Bools     map[bool]*Bool       `protobuf:"bytes,3,rep,name=bools,proto3" json:"bools,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Messages  map[string]*Message  `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Arrays    map[string]*Array    `protobuf:"bytes,5,rep,name=arrays,proto3" json:"arrays,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Types     map[int32]Type       `protobuf:"bytes,6,rep,name=types,proto3" json:"types,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=pb.Type"`
	U32S      map[string]uint32    `protobuf:"bytes,7,rep,name=u32s,proto3" json:"u32s,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Strs      map[string]string    `protobuf:"bytes,8,rep,name=strs,proto3" json:"strs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Empties   map[string]*Empty    `protobuf:"bytes,9,rep,name=empties,proto3" json:"empties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Optionals map[string]*Optional `protobuf:"bytes,10,rep,name=optionals,proto3" json:"optionals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Oneofs    map[string]*Oneof    `protobuf:"bytes,11,rep,name=oneofs,proto3" json:"oneofs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{5}
}

func (x *Map) GetNumbers() map[uint32]*Number {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *Map) GetStrings() map[string]*String {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *Map) GetBools() map[bool]*Bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *Map) GetMessages() map[string]*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Map) GetArrays() map[string]*Array {
	if x != nil {
		return x.Arrays
	}
	return nil
}

func (x *Map) GetTypes() map[int32]Type {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Map) GetU32S() map[string]uint32 {
	if x != nil {
		return x.U32S
	}
	return nil
}

func (x *Map) GetStrs() map[string]string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *Map) GetEmpties() map[string]*Empty {
	if x != nil {
		return x.Empties
	}
	return nil
}

func (x *Map) GetOptionals() map[string]*Optional {
	if x != nil {
		return x.Optionals
	}
	return nil
}

func (x *Map) GetOneofs() map[string]*Oneof {
	if x != nil {
		return x.Oneofs
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{6}
}

type Optional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number  *Number  `protobuf:"bytes,1,opt,name=number,proto3,oneof" json:"number,omitempty"`
	String_ *String  `protobuf:"bytes,2,opt,name=string,proto3,oneof" json:"string,omitempty"`
	Bool    *Bool    `protobuf:"bytes,3,opt,name=bool,proto3,oneof" json:"bool,omitempty"`
	Message *Message `protobuf:"bytes,4,opt,name=message,proto3,oneof" json:"message,omitempty"`
	Array   *Array   `protobuf:"bytes,5,opt,name=array,proto3,oneof" json:"array,omitempty"`
	Type    *Type    `protobuf:"varint,6,opt,name=type,proto3,enum=pb.Type,oneof" json:"type,omitempty"`
	U32     *uint32  `protobuf:"varint,7,opt,name=u32,proto3,oneof" json:"u32,omitempty"`
	Str     *string  `protobuf:"bytes,8,opt,name=str,proto3,oneof" json:"str,omitempty"`
}

func (x *Optional) Reset() {
	*x = Optional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Optional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Optional) ProtoMessage() {}

func (x *Optional) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Optional.ProtoReflect.Descriptor instead.
func (*Optional) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{7}
}

func (x *Optional) GetNumber() *Number {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *Optional) GetString_() *String {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *Optional) GetBool() *Bool {
	if x != nil {
		return x.Bool
	}
	return nil
}

func (x *Optional) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Optional) GetArray() *Array {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *Optional) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_NUMBER
}

func (x *Optional) GetU32() uint32 {
	if x != nil && x.U32 != nil {
		return *x.U32
	}
	return 0
}

func (x *Optional) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

type Oneof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number *Number `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	// Types that are assignable to Oneof:
	//
	//	*Oneof_String_
	//	*Oneof_Bool
	//	*Oneof_Message
	//	*Oneof_Array
	//	*Oneof_Type
	//	*Oneof_U32
	//	*Oneof_Str
	Oneof   isOneof_Oneof `protobuf_oneof:"oneof"`
	NumberX *Number       `protobuf:"bytes,9,opt,name=number_x,json=numberX,proto3" json:"number_x,omitempty"`
	StringX *String       `protobuf:"bytes,10,opt,name=string_x,json=stringX,proto3" json:"string_x,omitempty"`
}

func (x *Oneof) Reset() {
	*x = Oneof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneof) ProtoMessage() {}

func (x *Oneof) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneof.ProtoReflect.Descriptor instead.
func (*Oneof) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{8}
}

func (x *Oneof) GetNumber() *Number {
	if x != nil {
		return x.Number
	}
	return nil
}

func (m *Oneof) GetOneof() isOneof_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (x *Oneof) GetString_() *String {
	if x, ok := x.GetOneof().(*Oneof_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Oneof) GetBool() *Bool {
	if x, ok := x.GetOneof().(*Oneof_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *Oneof) GetMessage() *Message {
	if x, ok := x.GetOneof().(*Oneof_Message); ok {
		return x.Message
	}
	return nil
}

func (x *Oneof) GetArray() *Array {
	if x, ok := x.GetOneof().(*Oneof_Array); ok {
		return x.Array
	}
	return nil
}

func (x *Oneof) GetType() Type {
	if x, ok := x.GetOneof().(*Oneof_Type); ok {
		return x.Type
	}
	return Type_NUMBER
}

func (x *Oneof) GetU32() uint32 {
	if x, ok := x.GetOneof().(*Oneof_U32); ok {
		return x.U32
	}
	return 0
}

func (x *Oneof) GetStr() string {
	if x, ok := x.GetOneof().(*Oneof_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Oneof) GetNumberX() *Number {
	if x != nil {
		return x.NumberX
	}
	return nil
}

func (x *Oneof) GetStringX() *String {
	if x != nil {
		return x.StringX
	}
	return nil
}

type isOneof_Oneof interface {
	isOneof_Oneof()
}

type Oneof_String_ struct {
	String_ *String `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Oneof_Bool struct {
	Bool *Bool `protobuf:"bytes,3,opt,name=bool,proto3,oneof"`
}

type Oneof_Message struct {
	Message *Message `protobuf:"bytes,4,opt,name=message,proto3,oneof"`
}

type Oneof_Array struct {
	Array *Array `protobuf:"bytes,5,opt,name=array,proto3,oneof"`
}

type Oneof_Type struct {
	Type Type `protobuf:"varint,6,opt,name=type,proto3,enum=pb.Type,oneof"`
}

type Oneof_U32 struct {
	U32 uint32 `protobuf:"varint,7,opt,name=u32,proto3,oneof"`
}

type Oneof_Str struct {
	Str string `protobuf:"bytes,8,opt,name=str,proto3,oneof"`
}

func (*Oneof_String_) isOneof_Oneof() {}

func (*Oneof_Bool) isOneof_Oneof() {}

func (*Oneof_Message) isOneof_Oneof() {}

func (*Oneof_Array) isOneof_Oneof() {}

func (*Oneof_Type) isOneof_Oneof() {}

func (*Oneof_U32) isOneof_Oneof() {}

func (*Oneof_Str) isOneof_Oneof() {}

type UnsafeTest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Sub:
	//
	//	*UnsafeTest_Sub1_
	//	*UnsafeTest_Sub2_
	//	*UnsafeTest_Sub3_
	//	*UnsafeTest_Sub4_
	Sub isUnsafeTest_Sub `protobuf_oneof:"sub"`
}

func (x *UnsafeTest) Reset() {
	*x = UnsafeTest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeTest) ProtoMessage() {}

func (x *UnsafeTest) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeTest.ProtoReflect.Descriptor instead.
func (*UnsafeTest) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{9}
}

func (m *UnsafeTest) GetSub() isUnsafeTest_Sub {
	if m != nil {
		return m.Sub
	}
	return nil
}

func (x *UnsafeTest) GetSub1() *UnsafeTest_Sub1 {
	if x, ok := x.GetSub().(*UnsafeTest_Sub1_); ok {
		return x.Sub1
	}
	return nil
}

func (x *UnsafeTest) GetSub2() *UnsafeTest_Sub2 {
	if x, ok := x.GetSub().(*UnsafeTest_Sub2_); ok {
		return x.Sub2
	}
	return nil
}

func (x *UnsafeTest) GetSub3() *UnsafeTest_Sub3 {
	if x, ok := x.GetSub().(*UnsafeTest_Sub3_); ok {
		return x.Sub3
	}
	return nil
}

func (x *UnsafeTest) GetSub4() *UnsafeTest_Sub4 {
	if x, ok := x.GetSub().(*UnsafeTest_Sub4_); ok {
		return x.Sub4
	}
	return nil
}

type isUnsafeTest_Sub interface {
	isUnsafeTest_Sub()
}

type UnsafeTest_Sub1_ struct {
	Sub1 *UnsafeTest_Sub1 `protobuf:"bytes,1,opt,name=sub1,proto3,oneof"`
}

type UnsafeTest_Sub2_ struct {
	Sub2 *UnsafeTest_Sub2 `protobuf:"bytes,2,opt,name=sub2,proto3,oneof"`
}

type UnsafeTest_Sub3_ struct {
	Sub3 *UnsafeTest_Sub3 `protobuf:"bytes,3,opt,name=sub3,proto3,oneof"`
}

type UnsafeTest_Sub4_ struct {
	Sub4 *UnsafeTest_Sub4 `protobuf:"bytes,4,opt,name=sub4,proto3,oneof"`
}

func (*UnsafeTest_Sub1_) isUnsafeTest_Sub() {}

func (*UnsafeTest_Sub2_) isUnsafeTest_Sub() {}

func (*UnsafeTest_Sub3_) isUnsafeTest_Sub() {}

func (*UnsafeTest_Sub4_) isUnsafeTest_Sub() {}

type UnsafeTest_Sub1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S string `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	B []byte `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *UnsafeTest_Sub1) Reset() {
	*x = UnsafeTest_Sub1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeTest_Sub1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeTest_Sub1) ProtoMessage() {}

func (x *UnsafeTest_Sub1) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeTest_Sub1.ProtoReflect.Descriptor instead.
func (*UnsafeTest_Sub1) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UnsafeTest_Sub1) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *UnsafeTest_Sub1) GetB() []byte {
	if x != nil {
		return x.B
	}
	return nil
}

type UnsafeTest_Sub2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S []string `protobuf:"bytes,1,rep,name=s,proto3" json:"s,omitempty"`
	B [][]byte `protobuf:"bytes,2,rep,name=b,proto3" json:"b,omitempty"`
}

func (x *UnsafeTest_Sub2) Reset() {
	*x = UnsafeTest_Sub2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeTest_Sub2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeTest_Sub2) ProtoMessage() {}

func (x *UnsafeTest_Sub2) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeTest_Sub2.ProtoReflect.Descriptor instead.
func (*UnsafeTest_Sub2) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{9, 1}
}

func (x *UnsafeTest_Sub2) GetS() []string {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *UnsafeTest_Sub2) GetB() [][]byte {
	if x != nil {
		return x.B
	}
	return nil
}

type UnsafeTest_Sub3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo map[string]*UnsafeTest_Sub2 `protobuf:"bytes,1,rep,name=foo,proto3" json:"foo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UnsafeTest_Sub3) Reset() {
	*x = UnsafeTest_Sub3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeTest_Sub3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeTest_Sub3) ProtoMessage() {}

func (x *UnsafeTest_Sub3) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeTest_Sub3.ProtoReflect.Descriptor instead.
func (*UnsafeTest_Sub3) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{9, 2}
}

func (x *UnsafeTest_Sub3) GetFoo() map[string]*UnsafeTest_Sub2 {
	if x != nil {
		return x.Foo
	}
	return nil
}

type UnsafeTest_Sub4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Foo:
	//
	//	*UnsafeTest_Sub4_S
	//	*UnsafeTest_Sub4_B
	Foo isUnsafeTest_Sub4_Foo `protobuf_oneof:"foo"`
}

func (x *UnsafeTest_Sub4) Reset() {
	*x = UnsafeTest_Sub4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_module_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeTest_Sub4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeTest_Sub4) ProtoMessage() {}

func (x *UnsafeTest_Sub4) ProtoReflect() protoreflect.Message {
	mi := &file_module_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeTest_Sub4.ProtoReflect.Descriptor instead.
func (*UnsafeTest_Sub4) Descriptor() ([]byte, []int) {
	return file_module_proto_rawDescGZIP(), []int{9, 3}
}

func (m *UnsafeTest_Sub4) GetFoo() isUnsafeTest_Sub4_Foo {
	if m != nil {
		return m.Foo
	}
	return nil
}

func (x *UnsafeTest_Sub4) GetS() string {
	if x, ok := x.GetFoo().(*UnsafeTest_Sub4_S); ok {
		return x.S
	}
	return ""
}

func (x *UnsafeTest_Sub4) GetB() []byte {
	if x, ok := x.GetFoo().(*UnsafeTest_Sub4_B); ok {
		return x.B
	}
	return nil
}

type isUnsafeTest_Sub4_Foo interface {
	isUnsafeTest_Sub4_Foo()
}

type UnsafeTest_Sub4_S struct {
	S string `protobuf:"bytes,1,opt,name=s,proto3,oneof"`
}

type UnsafeTest_Sub4_B struct {
	B []byte `protobuf:"bytes,2,opt,name=b,proto3,oneof"`
}

func (*UnsafeTest_Sub4_S) isUnsafeTest_Sub4_Foo() {}

func (*UnsafeTest_Sub4_B) isUnsafeTest_Sub4_Foo() {}

var File_module_proto protoreflect.FileDescriptor

var file_module_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xe8, 0x01, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x33, 0x32, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x36,
	0x34, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03,
	0x73, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x03, 0x73, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x66, 0x33, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x04, 0x75, 0x66, 0x33, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x66, 0x36,
	0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x04, 0x75, 0x66, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x66, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x04, 0x73, 0x66, 0x33,
	0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x66, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x10, 0x52,
	0x04, 0x73, 0x66, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x36, 0x34,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x33, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66, 0x33, 0x32, 0x22, 0x30, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x14, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x01, 0x62, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x22, 0x87, 0x02, 0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x24, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x62,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x06, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x33, 0x32, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x33, 0x32, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x22,
	0xed, 0x09, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61,
	0x70, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61,
	0x70, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c,
	0x73, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x73, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x75,
	0x33, 0x32, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x61, 0x70, 0x2e, 0x55, 0x33, 0x32, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x75, 0x33,
	0x32, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x53, 0x74, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x70, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x12,
	0x2b, 0x0a, 0x06, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x73, 0x1a, 0x46, 0x0a, 0x0c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x0a,
	0x42, 0x6f, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x48, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x0b, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x42, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x55, 0x33, 0x32, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x53, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a,
	0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x0b, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x6e, 0x65, 0x6f, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xf0, 0x02, 0x0a, 0x08, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x48,
	0x02, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x48, 0x04, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x75, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x03,
	0x75, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x03, 0x73, 0x74, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x75, 0x33, 0x32, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x72, 0x22, 0xdc, 0x02, 0x0a, 0x05,
	0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x22, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12,
	0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x75,
	0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x75, 0x33, 0x32, 0x12,
	0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x74, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x78, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x58, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x58, 0x42, 0x07, 0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xbc, 0x03, 0x0a, 0x0a, 0x55,
	0x6e, 0x73, 0x61, 0x66, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x75, 0x62,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73,
	0x61, 0x66, 0x65, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x31, 0x48, 0x00, 0x52, 0x04,
	0x73, 0x75, 0x62, 0x31, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x75, 0x62, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x32, 0x48, 0x00, 0x52, 0x04, 0x73, 0x75, 0x62, 0x32, 0x12,
	0x29, 0x0a, 0x04, 0x73, 0x75, 0x62, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x33, 0x48, 0x00, 0x52, 0x04, 0x73, 0x75, 0x62, 0x33, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x75,
	0x62, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e,
	0x73, 0x61, 0x66, 0x65, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x34, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x75, 0x62, 0x34, 0x1a, 0x22, 0x0a, 0x04, 0x53, 0x75, 0x62, 0x31, 0x12, 0x0c, 0x0a,
	0x01, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x62, 0x1a, 0x22, 0x0a, 0x04, 0x53, 0x75, 0x62,
	0x32, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x62, 0x1a, 0x83, 0x01,
	0x0a, 0x04, 0x53, 0x75, 0x62, 0x33, 0x12, 0x2e, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x33, 0x2e, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x66, 0x6f, 0x6f, 0x1a, 0x4b, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x32, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x2d, 0x0a, 0x04, 0x53, 0x75, 0x62, 0x34, 0x12, 0x0e, 0x0a, 0x01, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x01, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x01, 0x62, 0x42, 0x05, 0x0a, 0x03, 0x66,
	0x6f, 0x6f, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x2a, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f,
	0x4c, 0x10, 0x02, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_module_proto_rawDescOnce sync.Once
	file_module_proto_rawDescData = file_module_proto_rawDesc
)

func file_module_proto_rawDescGZIP() []byte {
	file_module_proto_rawDescOnce.Do(func() {
		file_module_proto_rawDescData = protoimpl.X.CompressGZIP(file_module_proto_rawDescData)
	})
	return file_module_proto_rawDescData
}

var file_module_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_module_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_module_proto_goTypes = []interface{}{
	(Type)(0),               // 0: pb.Type
	(*Number)(nil),          // 1: pb.Number
	(*String)(nil),          // 2: pb.String
	(*Bool)(nil),            // 3: pb.Bool
	(*Message)(nil),         // 4: pb.Message
	(*Array)(nil),           // 5: pb.Array
	(*Map)(nil),             // 6: pb.Map
	(*Empty)(nil),           // 7: pb.Empty
	(*Optional)(nil),        // 8: pb.Optional
	(*Oneof)(nil),           // 9: pb.Oneof
	(*UnsafeTest)(nil),      // 10: pb.UnsafeTest
	nil,                     // 11: pb.Map.NumbersEntry
	nil,                     // 12: pb.Map.StringsEntry
	nil,                     // 13: pb.Map.BoolsEntry
	nil,                     // 14: pb.Map.MessagesEntry
	nil,                     // 15: pb.Map.ArraysEntry
	nil,                     // 16: pb.Map.TypesEntry
	nil,                     // 17: pb.Map.U32sEntry
	nil,                     // 18: pb.Map.StrsEntry
	nil,                     // 19: pb.Map.EmptiesEntry
	nil,                     // 20: pb.Map.OptionalsEntry
	nil,                     // 21: pb.Map.OneofsEntry
	(*UnsafeTest_Sub1)(nil), // 22: pb.UnsafeTest.Sub1
	(*UnsafeTest_Sub2)(nil), // 23: pb.UnsafeTest.Sub2
	(*UnsafeTest_Sub3)(nil), // 24: pb.UnsafeTest.Sub3
	(*UnsafeTest_Sub4)(nil), // 25: pb.UnsafeTest.Sub4
	nil,                     // 26: pb.UnsafeTest.Sub3.FooEntry
}
var file_module_proto_depIdxs = []int32{
	0,  // 0: pb.Message.type:type_name -> pb.Type
	1,  // 1: pb.Message.number:type_name -> pb.Number
	2,  // 2: pb.Message.string:type_name -> pb.String
	3,  // 3: pb.Message.bool:type_name -> pb.Bool
	1,  // 4: pb.Array.numbers:type_name -> pb.Number
	2,  // 5: pb.Array.strings:type_name -> pb.String
	3,  // 6: pb.Array.bools:type_name -> pb.Bool
	4,  // 7: pb.Array.messages:type_name -> pb.Message
	5,  // 8: pb.Array.arrays:type_name -> pb.Array
	0,  // 9: pb.Array.types:type_name -> pb.Type
	11, // 10: pb.Map.numbers:type_name -> pb.Map.NumbersEntry
	12, // 11: pb.Map.strings:type_name -> pb.Map.StringsEntry
	13, // 12: pb.Map.bools:type_name -> pb.Map.BoolsEntry
	14, // 13: pb.Map.messages:type_name -> pb.Map.MessagesEntry
	15, // 14: pb.Map.arrays:type_name -> pb.Map.ArraysEntry
	16, // 15: pb.Map.types:type_name -> pb.Map.TypesEntry
	17, // 16: pb.Map.u32s:type_name -> pb.Map.U32sEntry
	18, // 17: pb.Map.strs:type_name -> pb.Map.StrsEntry
	19, // 18: pb.Map.empties:type_name -> pb.Map.EmptiesEntry
	20, // 19: pb.Map.optionals:type_name -> pb.Map.OptionalsEntry
	21, // 20: pb.Map.oneofs:type_name -> pb.Map.OneofsEntry
	1,  // 21: pb.Optional.number:type_name -> pb.Number
	2,  // 22: pb.Optional.string:type_name -> pb.String
	3,  // 23: pb.Optional.bool:type_name -> pb.Bool
	4,  // 24: pb.Optional.message:type_name -> pb.Message
	5,  // 25: pb.Optional.array:type_name -> pb.Array
	0,  // 26: pb.Optional.type:type_name -> pb.Type
	1,  // 27: pb.Oneof.number:type_name -> pb.Number
	2,  // 28: pb.Oneof.string:type_name -> pb.String
	3,  // 29: pb.Oneof.bool:type_name -> pb.Bool
	4,  // 30: pb.Oneof.message:type_name -> pb.Message
	5,  // 31: pb.Oneof.array:type_name -> pb.Array
	0,  // 32: pb.Oneof.type:type_name -> pb.Type
	1,  // 33: pb.Oneof.number_x:type_name -> pb.Number
	2,  // 34: pb.Oneof.string_x:type_name -> pb.String
	22, // 35: pb.UnsafeTest.sub1:type_name -> pb.UnsafeTest.Sub1
	23, // 36: pb.UnsafeTest.sub2:type_name -> pb.UnsafeTest.Sub2
	24, // 37: pb.UnsafeTest.sub3:type_name -> pb.UnsafeTest.Sub3
	25, // 38: pb.UnsafeTest.sub4:type_name -> pb.UnsafeTest.Sub4
	1,  // 39: pb.Map.NumbersEntry.value:type_name -> pb.Number
	2,  // 40: pb.Map.StringsEntry.value:type_name -> pb.String
	3,  // 41: pb.Map.BoolsEntry.value:type_name -> pb.Bool
	4,  // 42: pb.Map.MessagesEntry.value:type_name -> pb.Message
	5,  // 43: pb.Map.ArraysEntry.value:type_name -> pb.Array
	0,  // 44: pb.Map.TypesEntry.value:type_name -> pb.Type
	7,  // 45: pb.Map.EmptiesEntry.value:type_name -> pb.Empty
	8,  // 46: pb.Map.OptionalsEntry.value:type_name -> pb.Optional
	9,  // 47: pb.Map.OneofsEntry.value:type_name -> pb.Oneof
	26, // 48: pb.UnsafeTest.Sub3.foo:type_name -> pb.UnsafeTest.Sub3.FooEntry
	23, // 49: pb.UnsafeTest.Sub3.FooEntry.value:type_name -> pb.UnsafeTest.Sub2
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_module_proto_init() }
func file_module_proto_init() {
	if File_module_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_module_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Optional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oneof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeTest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeTest_Sub1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeTest_Sub2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeTest_Sub3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_module_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeTest_Sub4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_module_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_module_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Oneof_String_)(nil),
		(*Oneof_Bool)(nil),
		(*Oneof_Message)(nil),
		(*Oneof_Array)(nil),
		(*Oneof_Type)(nil),
		(*Oneof_U32)(nil),
		(*Oneof_Str)(nil),
	}
	file_module_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UnsafeTest_Sub1_)(nil),
		(*UnsafeTest_Sub2_)(nil),
		(*UnsafeTest_Sub3_)(nil),
		(*UnsafeTest_Sub4_)(nil),
	}
	file_module_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*UnsafeTest_Sub4_S)(nil),
		(*UnsafeTest_Sub4_B)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_module_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_module_proto_goTypes,
		DependencyIndexes: file_module_proto_depIdxs,
		EnumInfos:         file_module_proto_enumTypes,
		MessageInfos:      file_module_proto_msgTypes,
	}.Build()
	File_module_proto = out.File
	file_module_proto_rawDesc = nil
	file_module_proto_goTypes = nil
	file_module_proto_depIdxs = nil
}
